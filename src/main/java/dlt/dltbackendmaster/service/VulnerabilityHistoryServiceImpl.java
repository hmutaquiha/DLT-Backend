package dlt.dltbackendmaster.service;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import dlt.dltbackendmaster.domain.Beneficiaries;
import dlt.dltbackendmaster.domain.VulnerabilityHistory;

@Service
public class VulnerabilityHistoryServiceImpl implements VulnerabilityHistoryService {

	@Autowired
	private DAOService service;

	@Override
	public void saveVulnerabilityHistory(Beneficiaries beneficiary) {
		if (beneficiary.getVbltIsDeficient() != null) {
			createVulnerability("IS_DEFICIENT", String.valueOf(beneficiary.getVbltIsDeficient()), beneficiary);
			if (beneficiary.getVbltIsDeficient() == 1 && beneficiary.getVbltDeficiencyType() != null) {
				createVulnerability("DEFICIENCY_TYPE", beneficiary.getVbltDeficiencyType(), beneficiary);
			}
		}
		if (beneficiary.getVbltChildren() != null) {
			createVulnerability("CHILDREN", String.valueOf(beneficiary.getVbltChildren()), beneficiary);
		}
		if (beneficiary.getVbltSexWorker() != null) {
			createVulnerability("SEX_WORKER", String.valueOf(beneficiary.getVbltSexWorker()), beneficiary);
		}
		if (beneficiary.getVbltIsEmployed() != null) {
			createVulnerability("IS_EMPLOYED", beneficiary.getVbltIsEmployed(), beneficiary);
		}
		if (beneficiary.getVbltLivesWith() != null) {
			createVulnerability("LIVES_WITH", beneficiary.getVbltLivesWith(), beneficiary);
		}
		if (beneficiary.getVbltSchoolName() != null) {
			createVulnerability("SCHOOL_NAME", beneficiary.getVbltSchoolName(), beneficiary);
		}
		if (beneficiary.getVbltSexploitationTime() != null) {
			createVulnerability("SEXPLOITATION_TIME", beneficiary.getVbltSexploitationTime(), beneficiary);
		}
		if (beneficiary.getVbltTestedHiv() != null) {
			createVulnerability("TESTED_HIV", beneficiary.getVbltTestedHiv(), beneficiary);
		}
		if (beneficiary.getVbltVbgTime() != null) {
			createVulnerability("VBG_TIME", beneficiary.getVbltVbgTime(), beneficiary);
		}
		if (beneficiary.getVbltVbgType() != null) {
			createVulnerability("VBG_TYPE", beneficiary.getVbltVbgType(), beneficiary);
		}
		if (beneficiary.getVbltAlcoholDrugsUse() != null) {
			createVulnerability("ALCOHOL_DRUGS_USE", String.valueOf(beneficiary.getVbltAlcoholDrugsUse()), beneficiary);
		}
		if (beneficiary.getVbltAlcoholDrugsUse() != null) {
			createVulnerability("HOUSE_SUSTAINER", String.valueOf(beneficiary.getVbltHouseSustainer()), beneficiary);
		}
		if (beneficiary.getVbltIsMigrant() != null) {
			createVulnerability("IS_MIGRANT", String.valueOf(beneficiary.getVbltIsMigrant()), beneficiary);
		}
		if (beneficiary.getVbltIsOrphan() != null) {
			createVulnerability("IS_ORPHAN", String.valueOf(beneficiary.getVbltIsOrphan()), beneficiary);
		}
		if (beneficiary.getVbltIsStudent() != null) {
			createVulnerability("IS_STUDENT", String.valueOf(beneficiary.getVbltIsStudent()), beneficiary);
		}
		if (beneficiary.getVbltMarriedBefore() != null) {
			createVulnerability("MARRIED_BEFORE", String.valueOf(beneficiary.getVbltMarriedBefore()), beneficiary);
		}
		if (beneficiary.getVbltMultiplePartners() != null) {
			createVulnerability("MULTIPLE_PARTNERS", String.valueOf(beneficiary.getVbltMultiplePartners()),
					beneficiary);
		}
		if (beneficiary.getVbltPregnantBefore() != null) {
			createVulnerability("PREGNANT_BEFORE", String.valueOf(beneficiary.getVbltPregnantBefore()), beneficiary);
		}
		if (beneficiary.getVbltPregnantOrBreastfeeding() != null) {
			createVulnerability("PREGNANT_OR_BREASTFEEDING",
					String.valueOf(beneficiary.getVbltPregnantOrBreastfeeding()), beneficiary);
		}
		if (beneficiary.getVbltSchoolGrade() != null) {
			createVulnerability("SCHOOL_GRADE", String.valueOf(beneficiary.getVbltSchoolGrade()), beneficiary);
		}
		if (beneficiary.getVbltSexualExploitation() != null) {
			createVulnerability("SEXUAL_EXPLOITATION", String.valueOf(beneficiary.getVbltSexualExploitation()),
					beneficiary);
		}
		if (beneficiary.getVbltSexuallyActive() != null) {
			createVulnerability("SEXUALLY_ACTIVE", String.valueOf(beneficiary.getVbltSexuallyActive()), beneficiary);
		}
		if (beneficiary.getVbltStiHistory() != null) {
			createVulnerability("STI_HISTORY", String.valueOf(beneficiary.getVbltStiHistory()), beneficiary);
		}

		if (beneficiary.getVbltTraffickingVictim() != null) {
			createVulnerability("TRAFFICKING_VICTIM", String.valueOf(beneficiary.getVbltTraffickingVictim()),
					beneficiary);
		}
		if (beneficiary.getVbltVbgVictim() != null) {
			createVulnerability("VBG_VICTIM", String.valueOf(beneficiary.getVbltVbgVictim()), beneficiary);
		}
		if (beneficiary.getVbltHouseSustainer() != null) {
			createVulnerability("HOUSE_SUSTAINER", String.valueOf(beneficiary.getVbltHouseSustainer()), beneficiary);
		}
		if (beneficiary.getVbltIdp() != null) {
			createVulnerability("IDP", String.valueOf(beneficiary.getVbltIdp()), beneficiary);
		}
		if (beneficiary.getVbltPregnantOrHasChildren() != null) {
			createVulnerability("PREGNANT_OR_HAS_CHILDREN", String.valueOf(beneficiary.getVbltPregnantOrHasChildren()),
					beneficiary);
		}
	}

	private void createVulnerability(String vulnerabilityKey, String vulnerabilityValue, Beneficiaries beneficiary) {
		VulnerabilityHistory history = new VulnerabilityHistory();

		history.setBeneficiaries(beneficiary);
		history.setVulnerability(vulnerabilityKey);
		history.setValue(vulnerabilityValue);
		history.setStatus(beneficiary.getStatus());
		history.setCreatedBy(String.valueOf(beneficiary.getCreatedBy()));
		history.setDateCreated(new Date());

		try {

			List<VulnerabilityHistory> vulnerabilityHistoryOrdered = service.GetAllEntityByNamedQuery(
					"VulnerabilityHistory.findByBeneficiaryAndVulnerability", beneficiary.getId(), vulnerabilityKey);

			if (vulnerabilityValue != null && (vulnerabilityHistoryOrdered.isEmpty()
					|| !vulnerabilityValue.equals(vulnerabilityHistoryOrdered.get(0).getValue()))) {
				service.Save(history);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}